spring:
  profiles:
    include:
      - comm
---
server:
  config:
    activate:
      on-profile: prod
  port: 8080
  error.include-message: always
  tomcat:
    max-swallow-size: -1
  reactive:
    session:
      cookie:
        domain: .profilehub.info
        secure: true
---
logging:
  level:
    root: DEBUG

api:
  common:
    version: 1.0.0
    title: Profile Box Admin API
    description: Profile Box Admin API
    termsOfServiceUrl:
    license: License
    licenseUrl: MY LICENSE URL
    contact:
      name: Contact
      url: My
      email: me@mail.com

spring:
  servlet:
    multipart:
      max-file-size: 10MB
      max-request-size: 10MB
  jpa:
    database-platform: org.hibernate.dialect.PostgreSQLDialect
    hibernate:
      ddl-auto: update
    properties:
      hibernate:
        format_sql: true
        default_batch_fetch_size: 1000
---
server:
  config:
    activate:
      on-profile: local
  port: 7002

spring:
  config:
    activate:
      on-profile: local
  datasource:
    url: jdbc:postgresql://localhost:5432/profile_box
    username: admin
    password: admin
  data:
    redis:
      host: localhost
      port: 6379
#  kafka:
#    bootstrap-servers: localhost:9092
#    consumer:
#      group-id: myGroup
#spring:
#  config:
#    activate:
#      on-profile: local
#  # H2 Setting Info (H2 Console에 접속하기 위한 설정정보 입력)
#  h2:
#    console:
#      enabled: true  # H2 Console을 사용할지 여부 (H2 Console은 H2 Database를 UI로 제공해주는 기능)
#      path: /h2-console  # H2 Console의 Path
#  # Database Setting Info (Database를 H2로 사용하기 위해 H2연결 정보 입력)
#  datasource:
#    driver-class-name: org.h2.Driver  # Database를 H2로 사용하겠다.
#    url: jdbc:h2:~/profile-hub  # H2 접속 정보
#    username: heewon  # H2 접속 시 입력할 username 정보 (원하는 것으로 입력)
#    password: 1234 # H2 접속 시 입력할 password 정보 (원하는 것으로 입력)
